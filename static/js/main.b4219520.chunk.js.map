{"version":3,"sources":["components/BlackBar.js","components/OpeningScene.js","components/content/projects/IndividualProjectDisplay.js","components/content/projects/ProjectCard.js","components/content/projects/projectInformation.js","components/content/projects/ProjectDisplays.js","components/content/Title.js","components/content/Content.js","App.js","serviceWorker.js","index.js"],"names":["BlackBar","props","react_default","a","createElement","className","Scene","_Component","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","position","inherits","createClass","key","value","scene","refs","setState","setTimeout","style","height","ref","concat","Component","IndividualProjectDisplay","projectName","_this$props","imageurl","projectCover","backgroundImage","id","ProjectCard","project","projectClicked","projectInfo","projectTitle","color","backgroundImageUrl","onClick","clickEvent","name","technologies","description","links","map","linkObj","ind","rel","href","target","link","projectList","ProjectDisplays","currentProject","handleClick","bind","assertThisInitialized","evt","currentClickedState","forEach","width","_this$state","ProjectCard_ProjectCard","IndividualProjectDisplay_IndividualProjectDisplay","Title","title","_this2","newTitleArr","split","newTitle","delay","timer","letter","splice","length","join","i","Content","handleLinks","console","log","_this$refs","carousel","opacity","slice","projects","right","content_Title","ProjectDisplays_ProjectDisplays","App","opened","Fragment","OpeningScene_Scene","BlackBar_BlackBar","content_Content","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"yNAEaA,EAAW,SAACC,GACrB,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAAf,SCFKC,EAAb,SAAAC,GACE,SAAAD,EAAYL,GAAM,IAAAO,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IAChBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,QACKI,MAAQ,CACXC,SAAU,IAHIR,EADpB,OAAAC,OAAAQ,EAAA,EAAAR,CAAAH,EAAAC,GAAAE,OAAAS,EAAA,EAAAT,CAAAH,EAAA,EAAAa,IAAA,oBAAAC,MAAA,WAQsB,IACXC,EAASV,KAAKW,KAAdD,MACAL,EAAYL,KAAKV,MAAjBe,SAEPL,KAAKY,SAAS,CACZP,aAEFQ,WAAW,WAEPH,EAAMI,MAAMC,OAAS,QAEvB,OAnBN,CAAAP,IAAA,SAAAC,MAAA,WAsBW,IACAJ,EAAYL,KAAKI,MAAjBC,SACP,OACEd,EAAAC,EAAAC,cAAA,OAAKuB,IAAI,QAAQtB,UAAS,SAAAuB,OAAWZ,SAzB3CV,EAAA,CAA2BuB,oBCANC,cACjB,SAAAA,EAAY7B,GAAM,IAAAO,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAmB,IACdtB,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAqB,GAAAhB,KAAAH,QACKI,MAAQ,CACTgB,YAAa,IAHHvB,mFAOC,IAAAwB,EACgBrB,KAAKV,MAA7BgC,EADQD,EACRC,SAASF,EADDC,EACCD,YACApB,KAAKW,KAAKY,aAClBT,MAAMU,gBAAkBF,EAChCtB,KAAKY,SAAS,CACVQ,iDAKJ,OACI7B,EAAAC,EAAAC,cAAA,OAAKuB,IAAI,eAAeS,GAAIzB,KAAKI,MAAMgB,YAAa1B,UAAU,sCAnBpBwB,aCAjCQ,cACnB,SAAAA,EAAYpC,GAAO,IAAAO,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA0B,IACjB7B,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA4B,GAAAvB,KAAAH,QACKI,MAAQ,CACXuB,QAAS,GACTC,gBAAgB,GAJD/B,mFAQC,IACVgC,EAAgB7B,KAAKV,MAArBuC,YACFF,EAAU3B,KAAKW,KAAKY,aACLvB,KAAKW,KAAKmB,aAElBhB,MAAMiB,MAAQF,EAAYE,MACvCJ,EAAQb,MAAMU,gBAAkBK,EAAYG,mBAE5ChC,KAAKY,SAAS,CACZe,QAASE,qCAIJ,IACCF,EAAY3B,KAAKI,MAAjBuB,QACR,OACEpC,EAAAC,EAAAC,cAAA,OAAKuB,IAAI,eAAetB,UAAU,iBAEhCH,EAAAC,EAAAC,cAAA,OAAKwC,QAASjC,KAAKV,MAAM4C,WAAYxC,UAAU,uBAC7CH,EAAAC,EAAAC,cAAA,OAAKuB,IAAI,eAAetB,UAAU,6BAC/BiC,EAAQQ,MAEX5C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,4BAA4BiC,EAAQS,cACnD7C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mCACZiC,EAAQU,aAIPV,EAAQW,MAAQX,EAAQW,MAAMC,IAAI,SAACC,EAAQC,GACvC,OACElD,EAAAC,EAAAC,cAAA,KACAe,IAAG,GAAAS,OAAKU,EAAQQ,KAAb,UAAAlB,OAA0BwB,GAE7BC,IAAI,sBACJC,KAAMH,EAAQG,KACdC,OAAO,SACPlD,UAAU,4BAET8C,EAAQK,QAGV,cAlDsB3B,aCY5B4B,EAAc,CACzB,CACEX,KAAM,aACNC,aAAc,4DACdC,YACE,iHACFL,mBAAoB,uCACpBD,MAAO,gBACPO,MAAO,CACL,CACEK,KAAM,wCACNE,KAAM,mCAIZ,CACEV,KAAM,eACNC,aAAc,sCACdC,YACE,4HACFL,mBAAoB,yCACpBD,MAAO,iBACPO,MAAO,CACL,CACEK,KAAM,sCACNE,KAAM,oCAIZ,CACEV,KAAM,YACNC,aAAc,6CACdC,YACE,yHACFL,mBAAoB,sCACpBD,MAAO,kBACPO,MAAO,CACL,CACEK,KAAM,iDACNE,KAAM,4CAIZ,CACEV,KAAM,iBACNC,aAAc,wDACdC,YACE,2GACFL,mBAAoB,0CACpBD,MAAO,eACPO,MAAO,CACL,CACEK,KAAM,gCACNE,KAAM,wBAER,CACEF,KAAM,iCACNE,KAAM,6BClEOE,cACnB,SAAAA,EAAYzD,GAAO,IAAAO,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA+C,IACjBlD,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAiD,GAAA5C,KAAAH,QACKI,MAAQ,CACX4C,eAAgB,GAChBF,YAAa,GACblB,gBAAgB,GAElB/B,EAAKoD,YAAcpD,EAAKoD,YAAYC,KAAjBpD,OAAAqD,EAAA,EAAArD,QAAAqD,EAAA,EAAArD,CAAAD,KAPFA,mFAWjBG,KAAKY,SAAS,CACZkC,oDAIQM,GACV,IAAMhC,EAAcgC,EAAIR,OAAOnB,GACzB4B,EAAsBrD,KAAKI,MAAMwB,eAChCkB,EAAe9C,KAAKI,MAApB0C,YACHE,EAAiB,GACrBF,EAAYQ,QAAQ,SAAA3B,GACfA,EAAQQ,OAASf,IAAa4B,EAAiBrB,KAExB,uBAAzByB,EAAIR,OAAOlD,WACZM,KAAKY,SAAS,CACZgB,gBAAiByB,EACjBL,iBACAO,MAAOF,EAAsB,OAAS,0CAKnC,IAAAG,EACiDxD,KAAKI,MAArD4C,EADDQ,EACCR,eAAgBpB,EADjB4B,EACiB5B,eAAgBkB,EADjCU,EACiCV,YAExC,OACEvD,EAAAC,EAAAC,cAAA,OAAKwC,QAASjC,KAAKiD,YAAavD,UAAU,sBAEtCkC,EACArC,EAAAC,EAAAC,cAACgE,EAAD,CACEvB,WAAYlC,KAAKiD,YACjBpB,YAAamB,IAEfF,EAAYP,IAAI,SAAAZ,GAAW,IAErBK,EAAuBL,EAAvBK,mBACN,OACEzC,EAAAC,EAAAC,cAACiE,EAAD,CACElD,IAAKmB,EAAQQ,KACbf,YAAaO,EAAQQ,KACrBb,SAAUU,cApDqBd,aCmC9ByC,6MArCbvD,MAAQ,CACNwD,MAAO,2FAkBP,IAfkB,IAAAC,EAAA7D,KAEd4D,EAAQ,oBACRE,EAAc9D,KAAKI,MAAMwD,MAAMG,MAAM,IACrCC,EAAW,GACXC,EAAQ,IAENC,EAAQ,SAACC,GAAD,OAAYtD,WAAW,WACnCiD,EAAYM,OAAON,EAAYO,OAAS,EAAG,EAAGF,GAC9CH,EAAWF,EAAYQ,KAAK,IAE5BT,EAAKjD,SAAS,CACZgD,MAAOI,KAERC,IACMM,EAAI,EAAGA,EAAIX,EAAMS,OAAQE,IAAK,CAErCL,EADaN,EAAMW,IAGnBN,GAAS,sCAIJ,IACAL,EAAS5D,KAAKI,MAAdwD,MACP,OACErE,EAAAC,EAAAC,cAAA,MAAIC,UAAU,eACXkE,UAhCW1C,aCsFLsD,cAlFb,SAAAA,EAAYlF,GAAO,IAAAO,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAwE,IACjB3E,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA0E,GAAArE,KAAAH,KAAMV,KACDc,MAAQ,CACXiC,YAAa,IAEfxC,EAAKoD,YAAcpD,EAAKoD,YAAYC,KAAjBpD,OAAAqD,EAAA,EAAArD,QAAAqD,EAAA,EAAArD,CAAAD,KACnBA,EAAK4E,YAAc5E,EAAK4E,YAAYvB,KAAjBpD,OAAAqD,EAAA,EAAArD,QAAAqD,EAAA,EAAArD,CAAAD,KANFA,mFAUjB6E,QAAQC,IAAI,iCADM,IAAAC,EAGuB5E,KAAKW,KAAtCkE,EAHUD,EAGVC,SAAUxC,EAHAuC,EAGAvC,YAAaC,EAHbsC,EAGatC,MAE/BzB,WAAW,WACTwB,EAAYvB,MAAMgE,QAAU,GAC3B,MACHjE,WAAW,WACTgE,EAAS/D,MAAMgE,QAAU,EACzBxC,EAAMxB,MAAMgE,QAAU,GACrB,KACH9E,KAAKY,SAAS,CACZyB,YAAa,+EAILe,GAAK,IAEP5B,EAAoB4B,EAAIR,OAAO9B,MAA/BU,gBAEFG,EAAUH,EAAgBuD,MAAM,GAAIvD,EAAgB6C,OAAS,GAC3DW,EAAahF,KAAKI,MAAlB4E,SACRhF,KAAKY,SAAS,CACZgB,gBAAgB,EAEhBoB,eAAgBgC,EAASrD,yCAIjByB,GACQpD,KAAKW,KAAf2B,MACFxB,MAAMmE,MAAQ,uCAGb,IACC5C,EAAgBrC,KAAKI,MAArBiC,YACR,OACE9C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAACyF,EAAD,MACA3F,EAAAC,EAAAC,cAAA,MAAIuB,IAAI,cAActB,UAAU,qBAC7B2C,IAGL9C,EAAAC,EAAAC,cAAA,OAAKuB,IAAI,WAAWtB,UAAU,YAE5BH,EAAAC,EAAAC,cAAC0F,EAAD,OAEF5F,EAAAC,EAAAC,cAAA,OAAKwC,QAASjC,KAAKyE,YAAazD,IAAI,QAAQtB,UAAU,SACpDH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,eAAb,iBACAH,EAAAC,EAAAC,cAAA,KACEiD,IAAI,sBACJC,KAAK,6BACLC,OAAO,SACPlD,UAAU,cAJZ,sBAQAH,EAAAC,EAAAC,cAAA,KACEiD,IAAI,sBACJC,KAAK,wCACLC,OAAO,SACPlD,UAAU,cAJZ,yCArEYwB,aC+CPkE,oNA/CbhF,MAAQ,CACNiF,QAAQ,sFAGS,IAAAxB,EAAA7D,KAGjBa,WAAW,WACTgD,EAAKjD,SAAS,CACZyE,QAAQ,KAIV,sCAGK,IACAA,EAAUrF,KAAKI,MAAfiF,OAoBP,OACE9F,EAAAC,EAAAC,cAACF,EAAAC,EAAM8F,SAAP,KAEID,EAVF9F,EAAAC,EAAAC,cAACF,EAAAC,EAAM8F,SAAP,KACE/F,EAAAC,EAAAC,cAAC8F,EAAD,CAAOlF,SAAS,QAChBd,EAAAC,EAAAC,cAAC8F,EAAD,CAAOlF,SAAS,YAXlBd,EAAAC,EAAAC,cAAA,OAAKuB,IAAI,MAAMtB,UAAU,OACvBH,EAAAC,EAAAC,cAAC+F,EAAD,MACAjG,EAAAC,EAAAC,cAACgG,EAAD,MACAlG,EAAAC,EAAAC,cAAC+F,EAAD,eAzBQtE,cCQEwE,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOzG,EAAAC,EAAAC,cAACwG,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.b4219520.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport const BlackBar = (props) => {\r\n    return (\r\n        <div className=\"bar-black\">\r\n            hey.\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React, { Component } from \"react\";\r\n\r\nexport class Scene extends Component {\r\n  constructor(props){\r\n    super()\r\n    this.state = {\r\n      position: \"\",\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    const {scene} = this.refs\r\n    const {position} = this.props\r\n    //grab the position passed from the props and set it to state to change the class \r\n    this.setState({\r\n      position\r\n    })\r\n    setTimeout(()=>{\r\n        //original height 50vh transitioned here to 10vh (10vh being the height of the main pages black bars)\r\n        scene.style.height = \"10vh\"\r\n        //1500 here is the minimum time to load scenes\r\n    },500)\r\n  }\r\n\r\n  render() {\r\n    const {position} = this.state\r\n    return (\r\n      <div ref=\"scene\" className={`scene-${position}`}>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n","import React, { Component } from \"react\";\r\n\r\nexport default class IndividualProjectDisplay extends Component {\r\n    constructor(props){\r\n        super();\r\n        this.state = {\r\n            projectName: \"\",\r\n        };\r\n    }\r\n\r\n    componentDidMount(){\r\n        const {imageurl,projectName} = this.props\r\n        const project = this.refs.projectCover\r\n        project.style.backgroundImage = imageurl\r\n        this.setState({\r\n            projectName,\r\n        })\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div ref=\"projectCover\" id={this.state.projectName} className=\"projects-container-display\" />\r\n        )\r\n    }\r\n} ","import React, { Component } from \"react\";\r\n\r\nexport default class ProjectCard extends Component {\r\n  constructor(props) {\r\n    super();\r\n    this.state = {\r\n      project: {},\r\n      projectClicked: false\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { projectInfo } = this.props;\r\n    const project = this.refs.projectCover;\r\n    const projectTitle = this.refs.projectTitle;\r\n    //grab the elements that need smart styling by the ref\r\n    projectTitle.style.color = projectInfo.color;\r\n    project.style.backgroundImage = projectInfo.backgroundImageUrl;\r\n    //style em here ^\r\n    this.setState({\r\n      project: projectInfo\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { project } = this.state;\r\n    return (\r\n      <div ref=\"projectCover\" className=\"project-slide\">\r\n        {/* pass down the clickEvent from the ProjectDisplay div */}\r\n        <div onClick={this.props.clickEvent} className=\"project-slide-cover\">\r\n          <div ref=\"projectTitle\" className=\"project-slide-cover-title\">\r\n            {project.name}\r\n          </div>\r\n          <div className=\"project-slide-cover-tech\">{project.technologies}</div>\r\n          <div className=\"project-slide-cover-description\">\r\n            {project.description}\r\n          </div>\r\n          {\r\n            //   load links only if it's defined : null\r\n              project.links ? project.links.map((linkObj,ind) => {\r\n                  return (\r\n                    <a\r\n                    key={`${project.name}-link-${ind}`}\r\n                    // use these props to make link open on new tab\r\n                    rel=\"noopener noreferrer\"\r\n                    href={linkObj.href}\r\n                    target=\"_blank\"\r\n                    className=\"project-slide-cover-link\"\r\n                  >\r\n                    {linkObj.link}\r\n                  </a>\r\n                  )\r\n              }) : null\r\n          }\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","// const projectTemplate = {\r\n//   name: \"\",\r\n//   technologies: \"\",\r\n//   description: \"\",\r\n//   backgroundImageUrl: \"\",\r\n//   color: \"\",\r\n//   links: [\r\n//     {\r\n//       href: \"\",\r\n//       link: \"\"\r\n//     },\r\n//   ]\r\n// };\r\n\r\nexport const projectList = [\r\n  {\r\n    name: \"Tabtracker\",\r\n    technologies: \"Vue.js, Vuex, Vuetify Express, Sequelize, SQLite, Webpack\",\r\n    description:\r\n      \"Comprehensive fullstack website clone for keeping track of guitar tabs and songs, created using Vue and SQLite\",\r\n    backgroundImageUrl: \"url('./cover-images/TabTracker.png')\",\r\n    color: \"rgb(1,92,147)\",\r\n    links: [\r\n      {\r\n        href: \"https://github.com/mcabrex/tabtracker\",\r\n        link: \"github.com/mcabrex/tabtracker\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    name: \"TheoryScript\",\r\n    technologies: \"React.js, React, SCSS, Jest, Heroku\",\r\n    description:\r\n      \"Web application for the realization of functional music theory, created with create-react-app and deployed through Heroku\",\r\n    backgroundImageUrl: \"url('./cover-images/TheoryScript.png')\",\r\n    color: \"rgb(0,196,179)\",\r\n    links: [\r\n      {\r\n        href: \"https://theoryscript.herokuapp.com/\",\r\n        link: \"theoryscript.herokuapp.com \"\r\n      },\r\n    ]\r\n  },\r\n  {\r\n    name: \"Crossover\",\r\n    technologies: \"React, Firebase, Cloudinary, Webpack, SCSS\",\r\n    description:\r\n      \"Collaborative comic generator for users to take turns creating an original comic, deployed and stored through Firebase\",\r\n    backgroundImageUrl: \"url('./cover-images/Crossover.png')\",\r\n    color: \"rgb(223,159,38)\",\r\n    links: [\r\n      {\r\n        href: \"https://github.com/mdnyc2017/capstoneCrossover\",\r\n        link: \"github.com/mdnyc2017/capstoneCrossover\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    name: \"Dungeon Master\",\r\n    technologies: \"Webpack, React, Redux, Express, PostgresSQL, dnd5eAPI\",\r\n    description:\r\n      \"A web application for DMs to use in maintaining Dungeons and Dragons campaign information. (IN PROGRESS)\",\r\n    backgroundImageUrl: \"url('./cover-images/DungeonMaster.png')\",\r\n    color: \"rgb(121,0,0)\",\r\n    links: [\r\n      {\r\n        href: \"https://dee-em.herokuapp.com/\",\r\n        link: \"dee-em.herokuapp.com\"\r\n      },\r\n      {\r\n        href: \"https://github.com/mcabrex/dem\",\r\n        link: \"github.com/mcabrex/dem\"\r\n      }\r\n    ]\r\n  }\r\n];\r\n","import React, { Component } from \"react\";\r\nimport IndividualProjectDisplay from \"./IndividualProjectDisplay\";\r\nimport ProjectCard from \"./ProjectCard\";\r\nimport {projectList} from \"./projectInformation\";\r\n\r\nexport default class ProjectDisplays extends Component {\r\n  constructor(props) {\r\n    super();\r\n    this.state = {\r\n      currentProject: {},\r\n      projectList: [],\r\n      projectClicked: false\r\n    };\r\n    this.handleClick = this.handleClick.bind(this)\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({\r\n      projectList\r\n    });\r\n  }\r\n\r\n  handleClick(evt){\r\n    const projectName = evt.target.id\r\n    const currentClickedState = this.state.projectClicked\r\n    const {projectList} = this.state\r\n    let currentProject = {}\r\n    projectList.forEach(project =>{\r\n      if(project.name === projectName) currentProject = project\r\n    })\r\n    if(evt.target.className !== \"projects-container\"){\r\n      this.setState({\r\n        projectClicked: !currentClickedState,\r\n        currentProject,\r\n        width: currentClickedState ? \"10vw\" : \"65vw\"\r\n      })\r\n    } \r\n  }\r\n\r\n  render() {\r\n    const { currentProject, projectClicked, projectList } = this.state;\r\n    \r\n    return (\r\n      <div onClick={this.handleClick} className=\"projects-container\">\r\n        {\r\n          projectClicked ? \r\n          <ProjectCard \r\n            clickEvent={this.handleClick}\r\n            projectInfo={currentProject}\r\n          /> :\r\n          projectList.map(project => {\r\n          //destructure the backgroundImageUrl property on the project object, pass it down as a prop\r\n          let { backgroundImageUrl } = project;\r\n          return (\r\n            <IndividualProjectDisplay\r\n              key={project.name}\r\n              projectName={project.name}\r\n              imageurl={backgroundImageUrl}\r\n            />\r\n          );\r\n          })\r\n        }\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nclass Title extends Component {\r\n  state = {\r\n    title: \"{  }\",\r\n  };\r\n\r\n  componentDidMount() {\r\n    //the whole purpose of this is to create a title that appears letter by letter\r\n    let title = \"Mario Leo Cabardo\";\r\n    let newTitleArr = this.state.title.split(\"\");\r\n    let newTitle = \"\";\r\n    let delay = 200;\r\n    //an initial delay to be incremented during the loop\r\n    const timer = (letter) => setTimeout(() => {\r\n      newTitleArr.splice(newTitleArr.length - 2, 0, letter);\r\n      newTitle = newTitleArr.join(\"\");\r\n      //take the array of the title and insert the current letter into it, then join it and set the state\r\n      this.setState({\r\n        title: newTitle\r\n      });\r\n    }, delay);\r\n    for (let i = 0; i < title.length; i++) {\r\n      let letter = title[i];\r\n      timer(letter)\r\n      //delay keeps getting stacked on, giving the appearance of gradually being typed\r\n      delay += 100;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {title} = this.state\r\n    return (\r\n      <h1 className=\"title-title\">\r\n        {title}\r\n      </h1>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Title;\r\n","import React, { Component } from \"react\";\r\nimport { ProjectDisplays } from \"./projects\";\r\n\r\nimport Title from \"./Title\";\r\n\r\nclass Content extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      description: \"\"\r\n    };\r\n    this.handleClick = this.handleClick.bind(this);\r\n    this.handleLinks = this.handleLinks.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log(\"wake me up. WAKE ME UP INSIDE\")\r\n    //set the projects obj to state\r\n    const { carousel, description, links } = this.refs;\r\n    //transition times\r\n    setTimeout(() => {\r\n      description.style.opacity = 1;\r\n    }, 2500);\r\n    setTimeout(() => {\r\n      carousel.style.opacity = 1;\r\n      links.style.opacity = 1;\r\n    }, 4000);\r\n    this.setState({\r\n      description: \"developer. engineer. another buzzword.\"\r\n    });\r\n  }\r\n\r\n  handleClick(evt) {\r\n    //grabbing the project name through the background image url on click\r\n    const { backgroundImage } = evt.target.style;\r\n    //backgroundImage gonna be a url, just slicing it to grab the project name\r\n    const project = backgroundImage.slice(19, backgroundImage.length - 6);\r\n    const { projects } = this.state;\r\n    this.setState({\r\n      projectClicked: true,\r\n      //set currentProject to the grabbed project name from the state projects obj\r\n      currentProject: projects[project]\r\n    });\r\n  }\r\n\r\n  handleLinks(evt) {\r\n    const { links } = this.refs;\r\n    links.style.right = \"0vw\";\r\n  }\r\n\r\n  render() {\r\n    const { description } = this.state;\r\n    return (\r\n      <div className=\"content\">\r\n        <div className=\"title\">\r\n          <Title />\r\n          <h2 ref=\"description\" className=\"title-description\">\r\n            {description}\r\n          </h2>\r\n        </div>\r\n        <div ref=\"carousel\" className=\"carousel\">\r\n          {/* carousel slides will go here */}\r\n          <ProjectDisplays />\r\n        </div>\r\n        <div onClick={this.handleLinks} ref=\"links\" className=\"links\">\r\n          <a className=\"links-click\">Some Links -></a>\r\n          <a\r\n            rel=\"noopener noreferrer\"\r\n            href=\"https://github.com/mcabrex\"\r\n            target=\"_blank\"\r\n            className=\"links-link\"\r\n          >\r\n            github.com/mcabrex\r\n          </a>\r\n          <a\r\n            rel=\"noopener noreferrer\"\r\n            href=\"https://www.linkedin.com/in/mcabardo/\"\r\n            target=\"_blank\"\r\n            className=\"links-link\"\r\n          >\r\n            linkedin.com/in/mcabardo \r\n          </a>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Content;\r\n","import React, { Component } from \"react\";\r\nimport { BlackBar, Content, Scene } from \"./components\";\r\nimport \"./styles/index.scss\";\r\n\r\nclass App extends Component {\r\n  state = {\r\n    opened: true\r\n  }\r\n\r\n  componentDidMount(){\r\n    //opened prop on state used to determine whether to show the \r\n    //opening scene or the main page \r\n    setTimeout(()=>{\r\n      this.setState({\r\n        opened: false\r\n      })\r\n      //time has to be higher than the height timeout function \r\n      //in the used element (Scene component in this case(1500)) plus the transition length (2000)\r\n    },3000)\r\n  }\r\n\r\n  render() {\r\n    const {opened} = this.state\r\n    //the two options to load, the opening scene and the actual page\r\n    const mainpage = () => {\r\n      return (\r\n        <div ref=\"app\" className=\"App\">\r\n          <BlackBar />\r\n          <Content />\r\n          <BlackBar />\r\n        </div>\r\n      )\r\n    }\r\n    const openingScene = () => {\r\n      return (\r\n        <React.Fragment>\r\n          <Scene position=\"top\" />\r\n          <Scene position=\"bottom\" />\r\n        </React.Fragment>\r\n      )\r\n    }\r\n    //use a ternary based on the state to transition between the two\r\n    return (\r\n      <React.Fragment>\r\n        {\r\n          opened ? openingScene() : mainpage()\r\n        }\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}